<?php

namespace AppBundle\Repository;

/**
 * TacheRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.    
 */
class TacheRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAllTachePersonne($idTache)
    {
        // ALTER TABLE `tache` ADD `duree` INT NOT NULL AFTER `date_fin`;
        $em = $this->getEntityManager(); // GESTIONNAIRE D'ENTITE
        $sql = "SELECT * FROM `assignation` a JOIN `fos_user` fou ON fou.id = a.idpersonne WHERE a.idtache = ? " ; // PREPARATION DE LA REQUETE
        $statement = $em->getConnection()->prepare($sql);
        $statement->execute(array($idTache));
        $result = $statement->fetchAll();
        return $result ;  
    }

    public function getAllTacheTypeTache($idTache)
    {
        // ALTER TABLE `tache` ADD `duree` INT NOT NULL AFTER `date_fin`;
        $em = $this->getEntityManager(); // GESTIONNAIRE D'ENTITE
        $sql = "SELECT * FROM `histo_type_tache` ht JOIN type_tache typ ON typ.id = ht.idtypetache WHERE ht.idtache = ? " ; // PREPARATION DE LA REQUETE
        $statement = $em->getConnection()->prepare($sql);
        $statement->execute(array($idTache));
        $result = $statement->fetchAll();
        return $result ; 
    }

    public function getAllTache($agenceId)
    {
        $em = $this->getEntityManager(); // GESTIONNAIRE D'ENTITE
        $sql = "SELECT DATE_FORMAT(date_debut,'%d %b %Y') as dateDebut, DATE_FORMAT(date_fin,'%d %b %Y') as dateFin, tache.* FROM `tache` WHERE `idAgence` = ? " ;
        $statement = $em->getConnection()->prepare($sql);
        $statement->execute(array($agenceId));
        $result = $statement->fetchAll();
        return $result ; 
    }

    public function getAllCommentTache($idTache)
    {
        $em = $this->getEntityManager(); // GESTIONNAIRE D'ENTITE
        $sql = "SELECT * FROM `commentaire` com JOIN tache t ON t.id = com.idtache JOIN fos_user fou ON fou.id = com.idPcomment  WHERE com.idtache = ?" ;
        $statement = $em->getConnection()->prepare($sql);
        $statement->execute(array($idTache));
        $result = $statement->fetchAll();
        return $result ; 
    }

    public function getTacheById($idTache)
    {
        $em = $this->getEntityManager(); // GESTIONNAIRE D'ENTITE
        $sql = " SELECT DATE_FORMAT(date_debut,'%d/%m/%Y') as dateDebut, DATE_FORMAT(date_fin,'%d/%m/%Y') as dateFin, tache.* FROM `tache` WHERE `id` = ? " ;
        $statement = $em->getConnection()->prepare($sql);
        $statement->execute(array($idTache));
        $result = $statement->fetch();
        return $result ; 
    }

    public function getAllTacheUser($agenceId,$userId)
    {
        $em = $this->getEntityManager(); // GESTIONNAIRE D'ENTITE
        $sql = "SELECT DATE_FORMAT(t.date_debut,'%d %b %Y') as dateDebut, DATE_FORMAT(t.date_fin,'%d %b %Y') as dateFin, t.* FROM `tache` t JOIN `assignation` a ON a.idtache = t.id  WHERE `idAgence` = ? AND a.idpersonne = ? " ;
        $statement = $em->getConnection()->prepare($sql);
        $statement->execute(array($agenceId,$userId));
        $result = $statement->fetchAll();
        return $result ; 
    }

    public function verificationTache($idTache,$dateDebut,$datFin)
    {
        $dateEnCours = date("Y-m-d") ;
        $timestampDebut = strtotime($dateDebut); 
        $timestampFin = strtotime($datFin); 
        $timestampEnCours = strtotime($dateEnCours); 

        $sql = "" ;

        if ($timestampEnCours >= $timestampDebut && $timestampEnCours <= $timestampFin )
        {
            $sql = "UPDATE `tache` SET `statut`= ? WHERE `id` = ? " ;
            $data = array(1,$idTache) ;
        }

        if ($timestampEnCours > $timestampFin)
        {
            $sql = "UPDATE `tache` SET `statut`= ? WHERE `id` = ? " ;
            $data = array(-1,$idTache) ;
        }
        if($sql != "")
        {
            $em = $this->getEntityManager() ; 
            $statement = $em->getConnection()->prepare($sql) ;
            $statement->execute($data) ;
        } 
    }
}
